// <auto-generated />
using CommandeServiceAPI.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CommandeServiceAPI.Migrations
{
    [DbContext(typeof(CommandDbContext))]
    [Migration("20250731110921_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("CommandeServiceAPI.Models.Command", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Commands");
                });

            modelBuilder.Entity("CommandeServiceAPI.Models.Command_Product", b =>
                {
                    b.Property<int>("CommandId")
                        .HasColumnType("int");

                    b.Property<int>("ProductCacheId")
                        .HasColumnType("int");

                    b.Property<int>("QuantityOrdered")
                        .HasColumnType("int");

                    b.HasKey("CommandId", "ProductCacheId");

                    b.HasIndex("ProductCacheId");

                    b.ToTable("Command_Products", (string)null);
                });

            modelBuilder.Entity("CommandeServiceAPI.Models.ProductCache", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("ProductPriceAtOrder")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId")
                        .IsUnique();

                    b.ToTable("Products");
                });

            modelBuilder.Entity("CommandeServiceAPI.Models.Command_Product", b =>
                {
                    b.HasOne("CommandeServiceAPI.Models.Command", "Command")
                        .WithMany("Command_Products")
                        .HasForeignKey("CommandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CommandeServiceAPI.Models.ProductCache", "ProductCache")
                        .WithMany("Command_Products")
                        .HasForeignKey("ProductCacheId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Command");

                    b.Navigation("ProductCache");
                });

            modelBuilder.Entity("CommandeServiceAPI.Models.Command", b =>
                {
                    b.Navigation("Command_Products");
                });

            modelBuilder.Entity("CommandeServiceAPI.Models.ProductCache", b =>
                {
                    b.Navigation("Command_Products");
                });
#pragma warning restore 612, 618
        }
    }
}
